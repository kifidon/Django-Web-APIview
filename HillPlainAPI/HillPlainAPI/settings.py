"""
Django settings for HillPlainAPI project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# LOGS_DIR = os.path.join(BASE_DIR, 'logs')


# Azure Blob Storage Configuration
AZURE_STORAGE_CONNECTION_STRING = (
    "DefaultEndpointsProtocol=https;"
    "AccountName=sqlb72b;"
    "AccountKey= **Redacted**;"
    "EndpointSuffix=core.windows.net"
)
AZURE_CONTAINER_NAME = "**Redacted**"  # Blob container name

# Log level
LOG_LEVEL = 'INFO'

# Custom Azure Blob Log Handler

# Logging Configuration
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': '%(asctime)s - %(name)s - %(levelname)s - %(message)s',
        },
    },
    'handlers': {
        'server_blob': {
            'level': LOG_LEVEL,
            'class': f'HillPlainAPI.Loggers.AzureBlobHandler',  # Replace with actual module path
            'formatter': 'standard',
            'connection_string': AZURE_STORAGE_CONNECTION_STRING,
            'container_name': AZURE_CONTAINER_NAME,
            'blob_name': 'ServerLog.log',
        },
        'background_blob': {
            'level': LOG_LEVEL,
            'class': f'HillPlainAPI.Loggers.AzureBlobHandler',  # Replace with actual module path
            'formatter': 'standard',
            'connection_string': AZURE_STORAGE_CONNECTION_STRING,
            'container_name': AZURE_CONTAINER_NAME,
            'blob_name': 'BackgroundTasksLog.log',
        },
        'sql_blob': {
            'level': LOG_LEVEL,
            'class': f'HillPlainAPI.Loggers.AzureBlobHandler',  # Replace with actual module path
            'formatter': 'standard',
            'connection_string': AZURE_STORAGE_CONNECTION_STRING,
            'container_name': AZURE_CONTAINER_NAME,
            'blob_name': 'SqlLog.log',
        },
    },
    'loggers': {
        'server': {
            'handlers': ['server_blob'],
            'level': LOG_LEVEL,
            'propagate': True,
        },
        'background_tasks': {
            'handlers': ['background_blob'],
            'level': LOG_LEVEL,
            'propagate': True,
        },
        'sqlLogger': {
            'handlers': ['sql_blob'],
            'level': LOG_LEVEL,
            'propagate': True,
        },
    },
}


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '**Redacted**'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = ['**Redacted**']


# Application definition

INSTALLED_APPS = [
    'celery',
    'django_celery_beat',
    'HillPlainAPI',
    'BackgroundTasks', #Celery?
    'Clockify',
    'LemApplication',
    'ReportGeneration',
    'Utilities',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'HillPlainAPI.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI_APPLICATION = 'HillPlainAPI.wsgi.application'

ASGI_APPLICATION = 'HillPlainAPI.wsgi.application'

DATABASES = {
    'default': {
        'ENGINE': 'mssql',
        'NAME': '**Redacted**',
        'USER': '**Redacted**',
        'PASSWORD': '**Redacted**!!',
        'HOST': '**Redacted**',  # e.g., 'localhost' or IP address
        'PORT': 1433,  # Default is usually '1433'
        'OPTIONS': {
            '**Redacted**',  # Change to your ODBC driver version
        }       
    }
}
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'rest_framework.authentication.TokenAuthentication',
#     ],
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',
#     ],
# }

# CSRF_COOKIE_HTTPONLY = True

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Denver'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
from ssl import CERT_OPTIONAL # for copy paste 
CELERY_BROKER_URL = 'rediss://:**Redacted**=@**Redacted**:6380/0?ssl_cert_reqs=CERT_OPTIONAL'
CELERY_RESULT_BACKEND = 'rediss://:**Redacted**=@**Redacted**:6380/0?ssl_cert_reqs=CERT_OPTIONAL'

# set the celery timezone
CELERY_TIMEZONE = 'America/Denver'
